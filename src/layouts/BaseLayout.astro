---
import BaseHead from "../components/BaseHead.astro";
const { title, description, image } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full antialiased dark">
  <head>
    <BaseHead title={title} description={description} image={image} />

    <style is:global>
      html.dark .astro-code,
      html.dark .astro-code span {
        color: var(--shiki-dark) !important;
        /* Optional, if you also want font styles */
        font-style: var(--shiki-dark-font-style) !important;
        font-weight: var(--shiki-dark-font-weight) !important;
        text-decoration: var(--shiki-dark-text-decoration) !important;
      }

      pre {
        border: 1px solid rgba(0, 0, 0, 0.1);
        background-color: rgba(0, 0, 0, 0.03) !important;
        border-radius: 0.75rem !important;
      }

      html.dark pre {
        border: 1px solid rgba(255, 255, 255, 0.1);
        background-color: rgba(255, 255, 255, 0.05) !important;
        border-radius: 0.75rem !important;
      }
    </style>

    <script is:inline>
      var mostVisible = (function () {
        "use strict";
        function t(e, n) {
          "string" == typeof e && (e = document.querySelectorAll(e));
          const r = { ...t.defaults, ...n };
          return Array.from(e).reduce(
            (t, e) => {
              let [n, o] = t;
              const u = (function (t, e, n) {
                const r = document.documentElement.clientHeight,
                  o = t.getBoundingClientRect(),
                  u = o.top - e,
                  i = o.bottom - e,
                  c = o.bottom - o.top,
                  f = u >= 0 && u < r,
                  s = i > 0 && i < r,
                  l = (() => {
                    if (f) return s ? c : r - o.top;
                    if (s) return i;
                    if (c > r && u < 0) {
                      const t = Math.abs(u);
                      if (t < c) return c - t;
                    }
                    return 0;
                  })();
                return n ? (l / c) * 100 : l;
              })(e, r.offset, r.percentage);
              return u > n ? [u, e] : [n, o];
            },
            [0, null]
          )[1];
        }
        return (
          (t.defaults = { percentage: !1, offset: 0 }),
          window &&
            window.jQuery &&
            (function (t, e) {
              t.fn.mostVisible = function (t) {
                return this.filter(e(this.get(), t));
              };
            })(window.jQuery, t),
          t
        );
      })();
    </script>
  </head>

  <body
    class="w-full h-full bg-white dark:bg-base-950 transition-colors duration-150 dark:transition-color dark:duration-150 lowercase"
  >
    <slot />
  </body>
</html>
