---
import Image from "astro/components/Image.astro";
import Badge from "../Helper/Badge.astro";
import ProjectBreadcrumb from "./ProjectBreadcrumb.astro";
import ProjectButtons from "./ProjectButtons.astro";
import ProseWrapper from "$layouts/ProseWrapper.astro";

const { project } = Astro.props;

const images = import.meta.glob(
  "/src/assets/projects/**/*.{png,webp,jpg,jpeg}"
);
const projectImages = await Promise.all(
  (project.images || []).map(async (image: string) => images[image])
);
---

<div class="">
	<div class="pb-16 pt-6 sm:pt-24 sm:pb-24">
		<ProjectBreadcrumb name={project.name} />

		<div class="mx-auto mt-8 max-w-2xl px-4 sm:px-6 lg:max-w-5xl lg:px-8">
			<div class="lg:grid lg:auto-rows-min lg:grid-cols-12 lg:gap-x-8">
				<div class="lg:col-span-5 lg:col-start-8">
					<div class="flex justify-between">
						<h1 class="text-3xl font-bold text-neutral-900 dark:text-white">{project.name}</h1>
					</div>
				</div>

				<div class="mt-8 lg:col-span-7 lg:col-start-1 lg:row-span-3 lg:row-start-1 lg:mt-0">
					<!-- Image gallery -->
					{project.images ? 
							(<h2 class="sr-only">Images</h2>

							<div
								class="grid grid-cols-1 overflow-hidden rounded-3xl lg:grid-cols-2 lg:grid-rows-3 lg:gap-8"
							>
									<Image
										src={projectImages[0]()}
										alt=""
										width={1000}
										height={1000}
										class="rounded-3xl lg:col-span-2 lg:row-span-2 border border-white/10"
									/>
								{project.images.length > 1 ?
									<Image src={projectImages[1]()} alt="" class="hidden rounded-3xl lg:block border border-white/10"
										width={1000}
										height={1000} />
								: null}
								{project.images.length > 2 ?
									<Image src={projectImages[2]()} alt="" class="hidden rounded-3xl lg:block border border-white/10"
										width={1000}
										height={1000} />
								: null}
							</div>)
					: <slot name="demo" />}
				</div>
				<div class="mt-8 lg:col-span-5">
					<div class="flex flex-col gap-4">
						<ProjectButtons codeUrl={project.codeUrl} projectUrl={project.projectUrl} />
					</div>

					<!-- Product details -->
					<div class="mt-10">
						<ProseWrapper>
							<slot />
						  </ProseWrapper>
					</div>

					{project.tags ?
						<div class="mt-14">
							<div class="flex flex-wrap gap-3">
								{project.tags.map((tag: string) => (
									<Badge size="lg">{tag}</Badge>
								))}
							</div>
						</div>
					: null}
				</div>
			</div>
		</div>
	</div>
</div>
